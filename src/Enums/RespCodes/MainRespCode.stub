<?php

namespace App\Enums\RespCodes;

use Aslnbxrz\SimpleException\Contracts\ThrowableEnum;
use Aslnbxrz\SimpleException\Traits\HasRespCodeTranslation;
use Aslnbxrz\SimpleException\Traits\HasStatusCode;
use Illuminate\Support\Str;
use Symfony\Component\HttpFoundation\Response;

enum MainRespCode: int implements ThrowableEnum
{
    use HasRespCodeTranslation, HasStatusCode;

    case AppVersionOutdated = 426;
    case AppMissingHeaders = 1000;
    case AppWrongLanguage = 1001;
    case ValidationError = 1002;
    case AppInvalidDeviceModel = 1003;
    case MaintenanceMode = 503;
    case ServiceUnavailable = 504;
    case InternalServerError = 500;
    case BadGateway = 502;
    case GatewayTimeout = 505;
    case Unauthorized = 401;
    case Forbidden = 403;
    case NotFound = 404;
    case TooManyRequests = 429;
    case RateLimitExceeded = 430;

    public function httpStatusCode(): int
    {
        return match ($this) {
            self::AppVersionOutdated => Response::HTTP_UPGRADE_REQUIRED,
            self::AppMissingHeaders => Response::HTTP_BAD_REQUEST,
            self::AppWrongLanguage => Response::HTTP_NOT_ACCEPTABLE,
            self::ValidationError => Response::HTTP_UNPROCESSABLE_ENTITY,
            self::AppInvalidDeviceModel, self::InternalServerError => Response::HTTP_INTERNAL_SERVER_ERROR,
            self::MaintenanceMode, self::ServiceUnavailable => Response::HTTP_SERVICE_UNAVAILABLE,
            self::BadGateway => Response::HTTP_BAD_GATEWAY,
            self::GatewayTimeout => Response::HTTP_GATEWAY_TIMEOUT,
            self::Unauthorized => Response::HTTP_UNAUTHORIZED,
            self::Forbidden => Response::HTTP_FORBIDDEN,
            self::NotFound => Response::HTTP_NOT_FOUND,
            self::TooManyRequests, self::RateLimitExceeded => Response::HTTP_TOO_MANY_REQUESTS,
        };
    }
}
